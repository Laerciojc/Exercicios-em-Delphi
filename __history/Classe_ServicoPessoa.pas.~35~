unit Classe_ServicoPessoa;

interface
uses
   Classe_Pessoa, generics.collections;
type
    TServicoPessoa = class
      private
            lista: Tlist<TPessoa>;
      public
          constructor create;
          destructor destroi;
          procedure setLista(p:TPessoa);
          function getCount: integer;
          function getMediaIdade: Real;
          function getPerAcim60: Real;
          function getQtFem17A36VDeLR: integer;
          function getStringSexo(sexo:integer):String;
          function getStringOlhos(olhos:integer):String;
          function getStringCabelos(cabelos:integer):String;

    end;

implementation

{ ServicoPessoa }

constructor TServicoPessoa.create;
begin
    self.lista := Tlist<TPessoa>.create;
end;

destructor TServicoPessoa.destroi;
begin
    self.lista.Clear;
end;

function TServicoPessoa.getCount: integer;
begin
     result := self.lista.Count;
end;

function TServicoPessoa.getMediaIdade: Real;
var
    p: TPessoa;
    somaidade : integer;
begin
     somaidade := 0;
     result := 0;
     for p in  self.lista do
     inc( somaidade, p.getIdade);

     if ( somaidade > 0) then
     result := (somaidade / self.getCount);

end;

function TServicoPessoa.getPerAcim60: Real;
var
   p: TPessoa;
   idade60 : integer;
begin
     idade60 := 0;
     result := 0;
     for p in  self.lista do
     if( p.getIdade > 60)then
        inc(idade60);

     if ( idade60 > 0) then
     result := (idade60 / self.getCount) * 100;
end;

function TServicoPessoa.getQtFem17A36VDeLR: integer;
var
    p: TPessoa;
    cont: integer;
begin
      cont := 0;
      result := 0;
      for p in  self.lista do
        if (p.getOlhos = 2) then
              inc (cont);

       if (cont > 0) then
       result := cont;
end;

function TServicoPessoa.getStringCabelos(cabelos: integer): String;
begin
     case (cabelos) of
        1: result := 'Louros';
        2: result := 'Castanhos';
        3: result := 'Pretos';
     end;
end;

function TServicoPessoa.getStringOlhos(olhos: integer): String;
begin
       case (olhos) of
        1: result := 'Azuis';
        2: result := 'Verdes';
        3: result := 'Castanhos';
     end;
end;

function TServicoPessoa.getStringSexo(sexo: integer): String;
begin
     case (sexo) of
        1: result := 'Masculino';
        2: result := 'Feminino';
     end;
end;

procedure TServicoPessoa.setLista(p: TPessoa);
begin
      self.lista.Add(p);
end;

end.
